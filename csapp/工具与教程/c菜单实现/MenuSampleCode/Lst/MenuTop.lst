C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE MENUTOP
OBJECT MODULE PLACED IN .\Obj\MenuTop.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE Src\MenuTop.C BROWSE DEBUG OBJECTEXTEND PRINT(.\Lst\MenuTop.lst) OBJECT(.\O
                    -bj\MenuTop.obj)

line level    source

   1          /******************************************************************************
   2           * MenuTop.C - ¶¥²ã²Ëµ¥ ÌõÏî²Ëµ¥ºËÐÄº¯Êý Í¼±ê²ãº¯ÊýµÈ
   3           *
   4           *
   5           * DESCRIPTION: -
   6           *
   7           * modification history
   8           * --------------------
   9           * 01a, 04/sep/2007, ÁºÑ×²ý written
  10           * --------------------
  11           ******************************************************************************/
  12          
  13          #include "CPU.H"
  14          #include "Ks0108.H"
  15          #include "Menu.H"
  16          
  17          
  18          //void Bar(U8 Item_,U8 ItemNum_);
  19          void DispBuildTime(void);//±àÒëÊ±¼ä
  20          
  21          /*
  22          *****************************************************************************
  23          * InitMenuVal - ³õÊ¼»¯²Ëµ¥ÏµÍ³
  24          * DESCRIPTION: -
  25          * ¸Ãº¯Êý±ØÐëÔÚ½øÈë²Ëµ¥Ç°±»µ÷ÓÃ   ³õÊ¼»¯È«¾Ö±äÁ¿
  26          * @Para void:
  27          * Return :
  28          *
  29          *****************************************************************************
  30          */
  31          void InitMenuVal(void)
  32          {
  33   1          WhereBackup_i = 0;
  34   1          ItemBackup_i = 0;
  35   1          Layer = 0;
  36   1          FatherIndex[Layer++] = MenuTopIndex;  //push index  ´ý»ú½çÃæ×÷ÎªÆðµã
  37   1      }
  38          /*
  39          *****************************************************************************
  40          * DispMenuTop - ´ý»ú½çÃæ²ã5¸öº¯Êý
  41          * DESCRIPTION: -
  42          * DispMenuTop   DispMenuTopUp  DispMenuTopDown  DispMenuTopLeft DispMenuTopRight
  43          *
  44          *
  45          *
  46          *****************************************************************************
  47          */
  48          void DispMenuTop(void)//´ý»ú½çÃæ
  49          {
  50   1          GUI_Clear();
  51   1          GUI_DispStringAtBar("Desktop",0,0,126,GUI_TA_HCENTER);
  52   1          //ÏÔÊ¾°´¼ü¶ÔÓ¦µÄÎÄ×ÖÌáÊ¾,0-->"²Ëµ¥"
  53   1          GUI_DispStringAtBar(*(Tip[language].Text),0,Enter_PosY,126,GUI_TA_HCENTER);
  54   1      }
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 2   

  55          //´ý»ú½çÃæÏÂUp¼üµÄ´¦Àí
  56          void DispMenuTopUp(void)
  57          {
  58   1      //-------------------
  59   1          KeyPressCount = 0;
  60   1      //-------------------
  61   1          GUI_Clear();
  62   1      //-------------------
  63   1      //ÕâÀïÊÇ¶¥²ã²Ëµ¥,Òò´ËÔÚ½øÈë×Ó²Ëµ¥Ç°ÐèÒª³õÊ¼»¯±äÁ¿
  64   1          InitMenuVal();
  65   1      //--------------------------
  66   1      //×´Ì¬Ìø×ª,½øÈë×Ó²Ëµ¥
  67   1          //jump to Menu index
  68   1          Jump2Menu(MenuIndex,FlashMode_AutoInit);
  69   1          return;
  70   1      }
  71          //´ý»ú½çÃæÏÂDown¼üµÄ´¦Àí
  72          void DispMenuTopDown(void)
  73          {
  74   1      
  75   1          if((KeyPressCount++)==0x0F){
  76   2              GUI_Clear();
  77   2              DispBuildTime();
  78   2              GUI_Delay(6500);
  79   2              KeyPressCount = 0;
  80   2              // we need reflash screen
  81   2              Jump2Menu(MenuTopIndex,FlashMode_ReFlash);
  82   2              return;
  83   2      
  84   2          }
  85   1          //return to MenuTop index
  86   1          Jump2Menu(MenuTopIndex,FlashMode_NoAction);
  87   1          return;
  88   1      }
  89          //´ý»ú½çÃæÏÂLeft¼üµÄ´¦Àí
  90          void DispMenuTopLeft(void)
  91          {
  92   1          KeyPressCount = 0;
  93   1      /*
  94   1      *   ÕâÀï¿ÉÒÔ×öÕâ¸ö°´¼üµÄ¹¦ÄÜ¶¨Òå,ÒòÎªÕâÊÇÔÚ´ý»ú½çÃæÏÂ
  95   1      *   ±ÈÈç,×öÄ³¸ö×Ó²Ëµ¥µÄ¿ì½ÝÁ´½Ó--°´ÏÂ¸Ã°´¼ü¾ÍÖ±½ÓÌø×ªµ½Ä³¸ö×Ó²Ëµ¥
  96   1      */
  97   1      //-------------------
  98   1      //ÕâÀïÊÇ¶¥²ã²Ëµ¥,Òò´ËÔÚ½øÈë×Ó²Ëµ¥Ç°ÐèÒª³õÊ¼»¯±äÁ¿
  99   1      //    InitMenuVal();
 100   1      //--------------------------
 101   1      //×´Ì¬Ìø×ª,½øÈë×Ó²Ëµ¥
 102   1          Jump2Menu(MenuTopIndex,FlashMode_NoAction);
 103   1          return;
 104   1      }
 105          //´ý»ú½çÃæÏÂRight¼üµÄ´¦Àí
 106          void DispMenuTopRight(void)
 107          {
 108   1          KeyPressCount = 0;
 109   1      //----------------------
 110   1      //    ClearLCD();
 111   1      //    DispRate(0);  //¹¦ÄÜº¯ÊýµÄ"¿ì½Ý·½Ê½"  µ½²âÁ¿ÏÔÊ¾
 112   1      //¹¦ÄÜº¯ÊýÖ´ÐÐÍê±ÏºóÖØÐÂ»Øµ½´ý»ú½çÃæ
 113   1      //    Jump2Menu(MenuTopIndex);
 114   1          Jump2Menu(MenuTopIndex,FlashMode_NoAction);
 115   1          return;
 116   1      }
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 3   

 117          /*
 118          ********************************************************
 119          ********************************************************
 120          */
 121          //-----------------------
 122          //²Ëµ¥±¸·Ýº¯Êý
 123          //±¸·Ýµ±Ç°²Ëµ¥µÄ¸÷¸ö²ÎÊý
 124          void PUSH(void)
 125          {
 126   1          WhereBackup[WhereBackup_i++] = Where;      //±¸·ÝWhere--->¸ßÁÁÏÔÊ¾µÄÎ»ÖÃ
 127   1          ItemBackup[ItemBackup_i++] = Item;         //±¸·ÝItem--->µ±Ç°ÏîµÄÎ»ÖÃ
 128   1          FatherIndex[Layer++] = KeyFuncIndex;      //±¸·ÝKeyFuncIndex--->×´Ì¬»úµÄ×´Ì¬
 129   1      //-------------------------------
 130   1      
 131   1      //-------------------------------
 132   1      
 133   1      }
 134          //²Ëµ¥»¹Ô­º¯Êý
 135          void POP(void)
 136          {
 137   1          Layer--;      //ÏÈµ¯³öÒ»²ã,ÒòÎªÊ¹ÓÃµÄÊÇ++,Òò´Ëµ±Ç°LayerÖ¸ÏòÏÂÒ»¸öÊý×éÎ»ÖÃ
 138   1          KeyFuncIndex = FatherIndex[Layer-1];     //»Ö¸´KeyFuncIndex
 139   1          Where = WhereBackup[--WhereBackup_i];    //»Ö¸´¸ßÁÁÏÔÊ¾Î»ÖÃWhere
 140   1          Item = ItemBackup[--ItemBackup_i];       //»Ö¸´ÏîÎ»ÖÃItem
 141   1      //-------------------------------
 142   1      
 143   1      //-------------------------------
 144   1          Flash = FlashMode_ReFlash;                     //×ÓÏî·µ»Ø,ÇëÇóË¢ÐÂ
 145   1      }
 146          
 147          /*
 148          *****************************************************************************
 149          * BarDisp - BarÐÍ²Ëµ¥ÏÔÊ¾
 150          * DESCRIPTION: -
 151          *
 152          * @Para s:BARÏÔÊ¾µÄÎÄ×ÖÄÚÈÝ
 153          * @Para X:XÖá×ø±ê
 154          * @Para Y:YÖá×ø±ê
 155          * @Para HighLight:1--->¸ßÁÁÏÔÊ¾µ±Ç°Ïî  0--->ÆÕÍ¨ÏÔÊ¾µ±Ç°Ïî
 156          //HightLight = 1--->HightLight Disp
 157          //HightLight = 0--->Normal Disp
 158          * Return :
 159          *
 160          *****************************************************************************
 161          */
 162          //void BarDisp(U8 _CONST_ *s,U8 X,U8 Y,U8 HighLight)
 163          void BarDisp(U8 *s,U8 X,U8 Y,U8 HighLight)
 164          {
 165   1      
 166   1      #ifdef LessCPUUseage
                  if (HighLight == 1) { //¸ßÁÁÏÔÊ¾
                      GUI_DispStringAtBar(s,X+8,Y,120,GUI_TA_LEFT);
                      GUI_SetEnFont(En_8x16);
                      GUI_DispCharAt('>',X,Y);
                  } else {  //Í¨³£ÏÔÊ¾
                      //ÏÔÊ¾BarµÄText
                      GUI_DispStringAtBar(s,X+8,Y,120,GUI_TA_LEFT);
                      GUI_SetEnFont(En_8x16);
                      GUI_DispCharAt(' ',X,Y);
                  }
              #else
 178   1          if (HighLight == 1) { //¸ßÁÁÏÔÊ¾
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 4   

 179   2      //------------------------------------
 180   2              GUI_SetTextMode(GUI_TEXTMODE_REVERSE);//¸ü¸Ä×ÖÌåÑÕÉ«À´Í»³öÏÔÊ¾
 181   2              GUI_DispStringAtBar(s,X,Y,120,GUI_TA_LEFT);
 182   2              GUI_SetTextMode(GUI_TEXTMODE_NORMAL);        //»Ö¸´Ô­ÓÐ×ÖÌåÑÕÉ«ºÍ±³¾°ÑÕÉ«
 183   2      //------------------------------------
 184   2          } else {  //Í¨³£ÏÔÊ¾
 185   2              //ÏÔÊ¾BarµÄText
 186   2              GUI_DispStringAtBar(s,X,Y,120,GUI_TA_LEFT);
 187   2          }
 188   1      #endif
 189   1      }
 190          /*
 191          FIXME!!!
 192          ÈçºÎÐÞ¸ÄBarMenuInitºÍÈçºÎ´¦ÀíItem WhereµÄ³õÊ¼»¯À´´ïµ½Èç´ËÒ»¸öÄ¿µÄ£¿
 193          µ±Ç°ÏµÍ³ÓïÑÔÉè¶¨ÊÇÓ¢Óï£¬¶øÓ¢ÓïÕâ¸öÏîÔÚµÚ2ÏîÎ»ÖÃ£¬Òò´ËÈçºÎÄÜ×öµ½µ±²Ëµ¥½øÈëÓïÑÔÑ¡ÔñÊ±£¬·´ÏÔÎ»ÖÃ¾ÍÔÚÓ¢ÓïÄÇÀï£
             -¿
 194          1¡£ÐÞ¸ÄBarMenuInit´úÂë£¬´¦ÀíµÚÒ»´Î½øÈëÊ±µÄ´¦Àí·½Ê½£¬Ò²Ðí¾Í¿ÉÒÔ½ö½öÊ¹ÓÃ´Ó×Ó²Ëµ¥ÍË³öÊ±µÄ´¦Àí·½·¨
 195          */
 196          //BarÐÍ²Ëµ¥³õÊ¼»¯  ¹«¹²²¿·Ö
 197          void BarMenuInit(void)
 198          {
 199   1      U8 Menu_i;          //¼ÆÊý±äÁ¿ ÔÚ²Ëµ¥º¯ÊýÖÐÓÃµ½
 200   1      U8 Menu_j;          //¼ÆÊý±äÁ¿
 201   1      //-------------------
 202   1      //±È½Ï"ÏÔÊ¾ÆÁ¿ÉÒÔÏÔÊ¾µÄÏîµÄÊýÄ¿(DispMax)"¸ú"ÐèÒªÏÔÊ¾µÄÊýÄ¿(ItemNum)"
 203   1      //ÕÒ³öÐ¡Õß,ÒÔÐ¡ÕßÎªÏÔÊ¾ÉÏÏÞ
 204   1      //ÀýÈçÏÔÊ¾ÆÁ¿ÉÒÔÏÔÊ¾3Ïî,ÐèÒªÏÔÊ¾µÄÏîÓÐ2Ïî,ÄÇÃ´ÏÔÊ¾2Ïî,ÓÐ3Ïî,ÏÔÊ¾3Ïî,ÓÐ4ÏîµÄ»°,ÏÔÊ¾3Ïî
 205   1          if (ItemNum > DispMax) {
 206   2              DispMin = DispMax;
 207   2          } else {
 208   2              DispMin = ItemNum;
 209   2          }
 210   1      //--------------------
 211   1      //    if (Flash) {//´Ó¸¸²Ëµ¥½øÈë ³õÊ¼»¯
 212   1              if(Flash == FlashMode_AutoInit){//³£¹æ½øÈë ×ö±¸·Ý
 213   2                  PUSH();//ÔÚÐÞ¸ÄItem WhereÖ®Ç°±¸·ÝÕâÐ©²ÎÊýÊý¾Ý£¡£¡
 214   2                  Item = 0;
 215   2                  Where = 0;
 216   2              } else if (Flash == FlashMode_ManualInit){    //·Ç³£¹æ½øÈë  ÔÚÖ®Ç°ÒÑ¾­±¸·ÝÁË£¬ÕâÀï×ö±ß½ç¼ì²é
 217   2                  if(Where > DispMin-1){//¼ì²éÊÇ·ñ³ö½ç
 218   3                      //Where = DispMin-1;//A.×îµ×²¿µÄÏÔÊ¾Î»ÖÃ
 219   3                      Where = 0;          //B.×î¶¥²¿µÄÏÔÊ¾Î»ÖÃ
 220   3                  }
 221   2                  if(Item > ItemNum-1){//¼ì²éÊÇ·ñ³ö½ç
 222   3                      //Item = ItemNum-1;//A.×îºóµÄÒ»¸öÏî
 223   3                      Item = 0;          //B.×î¿ªÊ¼µÄÒ»¸öÏî
 224   3                  }
 225   2              }
 226   1      //    }
 227   1      //-------------------
 228   1      //¼ÈÈ»Item Where¾ùÊÇÎ´¶¨µÄ£¬ÄÇÃ´ÎÒÃÇÊ¹ÓÃ´Ó×Ó²Ëµ¥ÍË³öµÄ·½·¨À´ÕÒµ½Ó¦¸ÃÔÙWhere=0Î»ÖÃÏÔÊ¾µÄItemÏî
 229   1      //----------------
 230   1      //·½·¨2
 231   1          if (Item >= Where) {//Î´¿çÔ½Áãµã
 232   2              Menu_j = Item -Where;
 233   2          } else {            //¿çÔ½Áãµã
 234   2              Menu_j = ItemNum  - (Where - Item);
 235   2          }
 236   1          //´ËÊ±Menu_JµÄÖµ¾ÍÊÇ¶¥²¿(Where=0)ÏÔÊ¾µÄItemÖµ
 237   1      //----------------
 238   1          //ÏÔÊ¾È«²¿µÄ×Ó²Ëµ¥Ïî
 239   1          for (Menu_i = 0; Menu_i < DispMin; Menu_i++) {
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 5   

 240   2              if (Menu_j == Item){ //·´ÏÔµÚItemÏî,Î»ÖÃÊÇWhere
 241   3                  BarDisp(*(DispItem+Item),BarXOffset,Where*BarYSize+BarYOffset,1);
 242   3              } else {             //ÆäËüÏî Õý³£ÏÔÊ¾
 243   3                  BarDisp(*(DispItem+Menu_j),BarXOffset,Menu_i*BarYSize+BarYOffset,0);
 244   3              }
 245   2              if (Menu_j == (ItemNum-1)) {//µ½ÁË×îºóÒ»Ïî£¬»Ø»·µ½×î¿ªÊ¼µÄÒ»Ïî
 246   3                  Menu_j = 0;
 247   3              } else {                    //ÏÂÒ»Ïî
 248   3                  Menu_j++;
 249   3              }
 250   2          }
 251   1          Bar(Item,ItemNum,MenuBarPosX,MenuBarNumPosX);                  //Î¬»¤¹ö¶¯Ìõ
 252   1      }
 253          
 254          
 255          //BarÏî²Ëµ¥Ïò×ó°´¼üµÄÐÐÎª
 256          /*
 257          ¿ÉÄÜµÄ¼¸ÖÖÇé¿ö:
 258          A.Ô­ÓÐBarµÄ¶¥²¿,°´¼üÊÇÏòÉÏ,ÄÇÃ´¾ÍÐèÒªË¢ÐÂÈ«²¿µÄÏÔÊ¾
 259          A1.ÈôÊÇÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØÐÂÏÔÊ¾È«²¿
 260          A2.ÈôÊÇÐèÒªÏÔÊ¾µÄBar²»¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,È¡Ïû¶¥²¿¸ßÁÁÏÔÊ¾,¸ßÁÁÏÔÊ¾×îºóÒ»ÏîBar
 261          B.Ô­ÓÐBar²»ÊÇÔÚ¶¥²¿,°´¼üÏòÉÏ,ÄÇÃ´È¡ÏûÔ­ÓÐBarµÄ¸ßÁÁ,¸ßÁÁÏÔÊ¾ÉÏÒ»¸öBarÏî
 262          µ±È»»¹ÐèÒªÎ¬»¤:¸ßÁÁÏÔÊ¾µÄÎ»ÖÃwhere/¸ßÁÁÏÔÊ¾BarÏîµÄItem
 263          */
 264          
 265          //Î¬»¤BarÏÔÊ¾
 266          void BarMenuLeft(void)
 267          {
 268   1          U8 Menu_i;          //¼ÆÊý±äÁ¿ ÔÚ²Ëµ¥º¯ÊýÖÐÓÃµ½
 269   1          U8 Menu_j;          //¼ÆÊý±äÁ¿
 270   1          U8 ItemBack;
 271   1          ItemBack = Item;//±¸·ÝÔ­ÓÐµÄItem,È¡ÏûÔ­ÓÐ·´ÏÔÊ±ÐèÒªÊ¹ÓÃ
 272   1          //Î¬»¤Item,µÃµ½ÐèÒª·´ÏÔµÄItem
 273   1          if (Item == 0) {
 274   2              Item = ItemNum-1;
 275   2          } else {
 276   2              Item--;
 277   2          }
 278   1          //Î¬»¤ÏÔÊ¾
 279   1          if (Where) {//µ±Ç°Î»ÖÃ²»Îª0,¾ÍÊÇËµ²»ÊÇÔÚ¶¥²¿,Á½´Î·´ÏÔ
 280   2      
 281   2      #ifdef LessCPUUseage
                      GUI_SetEnFont(En_8x16);
                      GUI_DispCharAt(' ',BarXOffset,(Where--)*BarYSize+BarYOffset);
                      GUI_DispCharAt('>',BarXOffset,Where*BarYSize+BarYOffset);
              #else
 286   2              //Ô­À´Î»ÖÃÈ¡Ïû·´ÏÔ   ÏîÊÇItemBack  Î»ÖÃWhere
 287   2              BarDisp(*(DispItem+ItemBack),BarXOffset,(Where--)*BarYSize+BarYOffset,0);
 288   2              //ÉÏÒÆºóµÄÎ»ÖÃ·´ÏÔ   ÏîÊÇItem      Î»ÖÃWhere-1 (Where--ÊµÏÖ)
 289   2              BarDisp(*(DispItem+Item),BarXOffset,Where*BarYSize+BarYOffset,1);//¸ßÁÁÏÔÊ¾
 290   2      #endif
 291   2      
 292   2      #ifdef RockBack
 293   2          } else {//µ±Ç°Î»ÖÃÎª0,     ¶¥²¿  ÉÏÒÆ  ÐèÒªË¢ÐÂÈ«²¿×Ó²Ëµ¥ÏîÏÔÊ¾   //1.»Ø¹ö·½Ê½,µ½ÁË¶¥²¿ºó»Ø¹öµ½µ×²¿
 294   2          #ifdef DynamicBar
                      if ((ItemNum > DispMax)||(BarDataMode == DynamicData)){//ÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØ
             -ÐÂÏÔÊ¾//08/29
                  #else
 297   2              if (ItemNum > DispMax) {//ÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØÐÂÏÔÊ¾
 298   3          #endif
 299   3      #else
                  }else if(ItemBack != 0){
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 6   

                      if (ItemNum > DispMax) {//ÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØÐÂÏÔÊ¾È«²¿
              #endif
 303   3      
 304   3                  Menu_j = Item;
 305   3                  Menu_i = 0;
 306   3                  //ÏîÊÇ Item Î»ÖÃ 0
 307   3                  BarDisp(*(DispItem+Menu_j),BarXOffset,Menu_i*BarYSize+BarYOffset,1);
 308   3                  if (Menu_j == (ItemNum-1)) {   //Î¬»¤Menu_j
 309   4                      Menu_j=0;
 310   4                  } else {
 311   4                      Menu_j++;
 312   4                  }
 313   3                  //ÏÔÊ¾ÆäËûÏî
 314   3                  for (Menu_i = 1; Menu_i < DispMax; Menu_i++) {
 315   4                      BarDisp(*(DispItem+Menu_j),BarXOffset,Menu_i*BarYSize+BarYOffset,0);
 316   4                      if (Menu_j == (ItemNum-1)) {
 317   5                          Menu_j=0;
 318   5                      } else {
 319   5                          Menu_j++;
 320   5                      }
 321   4                  }
 322   3                  Where = 0;//µ±Ç°Î»ÖÃÒÀÈ»ÔÚ¿ªÍ·µÄ0Î»ÖÃ
 323   3              } else {//µ¥ÆÁÄÜÏÔÊ¾ÍêÈ«²¿²Ëµ¥Ïî,"¶¥²¿ ÉÏÒÆ"Ó¦µ±Ìø×ªµ½µ×²¿(»òÕßÊ²Ã´¶¼²»×ö)
 324   3                  //µ±½ö½öÖ»ÓÐÒ»ÏîµÄÊ±ºò£¬Ó¦µ±Ò»Ö±ÔÚWhere=0µÄµØ·½·´ÏÔµÄ£¡£¡£¡ÕâÀïÒ²ÄÜÊµÏÖ£¬ÒòÎª×îºóÊÇ·´ÏÔµÄº¯Êý
 325   3                  Where = ItemNum-1;
 326   3                  //È¡Ïû¶¥²¿µÄÔ­ÓÐµÄ·´ÏÔ  ÏîItemBack  Î»ÖÃ0
 327   3                  BarDisp(*(DispItem+ItemBack),BarXOffset,0*BarYSize+BarYOffset,0);
 328   3                  //·´ÏÔ¸ù²¿  ÏîItem  Î»ÖÃItemNum-1
 329   3                  BarDisp(*(DispItem+Item),BarXOffset,Where*BarYSize+BarYOffset,1);//·´ÏÔ
 330   3              }
 331   2      #ifdef RockBack
 332   2          }
 333   1      #else
                  }else{
                      Item = ItemBack;//Restore
                  }
              
              #endif
 339   1      
 340   1          Bar(Item,ItemNum,125,120);                  //Î¬»¤¹ö¶¯Ìõ
 341   1          Jump2Menu(SelfMenuIndex,FlashMode_NoAction);
 342   1      }
 343          //BarÏî²Ëµ¥ÏòÓÒ°´¼üµÄÐÐÎª
 344          //Î¬»¤BarÏÔÊ¾
 345          void BarMenuRight(void)
 346          {
 347   1          U8 Menu_i;          //¼ÆÊý±äÁ¿ ÔÚ²Ëµ¥º¯ÊýÖÐÓÃµ½
 348   1          U8 Menu_j;          //¼ÆÊý±äÁ¿
 349   1          U8 ItemBack;
 350   1          ItemBack = Item;
 351   1      //---Î¬»¤Item
 352   1          if (Item == (ItemNum-1)) {
 353   2              Item = 0;
 354   2          } else {
 355   2              Item++;
 356   2          }
 357   1      //------------
 358   1      //---Î¬»¤ÏÔÊ¾
 359   1          if (Where != (DispMin-1)) {//µ±Ç°Î»ÖÃ²»Îª×îÄ©,Á½´Î·´ÏÔ
 360   2      
 361   2      
 362   2      #ifdef LessCPUUseage
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 7   

                      /*
                      Èç¹ûÊÇÊ¹ÓÃ">"ÕâÑùµÄ·ûºÅ±êÖ¾µ±Ç°·´ÏÔÏî£¬ÄÇÃ´Ö±½Ó·´ÏÔ¸Ã±êÖ¾ºÃÁË 2007¡¢1¡¢8
                      */
                      GUI_SetEnFont(En_8x16);
                      GUI_DispCharAt(' ',BarXOffset,(Where++)*BarYSize+BarYOffset);
                      GUI_DispCharAt('>',BarXOffset,Where*BarYSize+BarYOffset);
              #else
 370   2              //Ô­À´Î»ÖÃÈ¡Ïû·´ÏÔ   ÏîÊÇItemBack  Î»ÖÃWhere
 371   2              BarDisp(*(DispItem+ItemBack),BarXOffset,(Where++)*BarYSize+BarYOffset,0);
 372   2              //ÏÂÒÆºóµÄÎ»ÖÃ·´ÏÔ   ÏîÊÇItem      Î»ÖÃWhere+1(Where++ÊµÏÖ)
 373   2              BarDisp(*(DispItem+Item),BarXOffset,Where*BarYSize+BarYOffset,1);//·´ÏÔ
 374   2      #endif
 375   2      
 376   2      #ifdef RockBack
 377   2          } else {    //µ±Ç°Î»ÖÃÎªDispMax    µ×²¿  ÏÂÒÆ
 378   2          #ifdef DynamicBar
                      if ((ItemNum > DispMax)||(BarDataMode == DynamicData)){//ÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØ
             -ÐÂÏÔÊ¾//08/29
                  #else
 381   2              if (ItemNum > DispMax) {//ÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØÐÂÏÔÊ¾
 382   3          #endif
 383   3      #else
                  }else if(ItemBack != (ItemNum-1)){//µ±Ç°Î»ÖÃÎªDispMax    Èç¹ûÔ­À´ÏÔÊ¾Î»ÖÃ²»ÊÇ×îºóÒ»Ïî£¬Ôò µ×²¿  ÏÂÒÆ
                      if (ItemNum > DispMax) {//ÐèÒªÏÔÊ¾µÄBar¶àÓÚµ¥ÆÁ¿ÉÒÔÏÔÊ¾µÄBar,ÄÇÃ´ÖØÐÂÏÔÊ¾
              #endif
 387   3                  Menu_j = Item;
 388   3                  Menu_i = DispMax;
 389   3                  //ÏîÊÇ Item  Î»ÖÃÊÇ DispMax
 390   3                  BarDisp(*(DispItem+Menu_j),BarXOffset,(Menu_i-1)*BarYSize+BarYOffset,1);
 391   3                  if (Menu_j == 0) {
 392   4                      Menu_j = ItemNum-1;
 393   4                  } else {
 394   4                      Menu_j--;
 395   4                  }
 396   3                  //ÏÔÊ¾ÆäËûÏî
 397   3                  for (Menu_i = DispMax-1; Menu_i > 0; Menu_i--) {
 398   4                      BarDisp(*(DispItem+Menu_j),BarXOffset,(Menu_i-1)*BarYSize+BarYOffset,0);
 399   4                      if (Menu_j == 0) {
 400   5                          Menu_j = ItemNum-1;
 401   5                      } else {
 402   5                          Menu_j--;
 403   5                      }
 404   4                  }
 405   3                  Where = DispMax-1;//µ±Ç°Î»ÖÃÒÀÈ»Ä©Î²Î»ÖÃ
 406   3              } else {//µ¥ÆÁÄÜÏÔÊ¾ÍêÈ«²¿²Ëµ¥Ïî,"µ×²¿ ÏÂÒÆ"Ó¦µ±Ìø×ªµ½¶¥²¿·´ÏÔ(»òÕßÊ²Ã´¶¼²»×ö)
 407   3                  Where = 0;
 408   3                  //È¡Ïûµ×²¿Ô­ÓÐ·´ÏÔ   ÏîItemBack  Î»ÖÃItemNum-1
 409   3                  BarDisp(*(DispItem+ItemBack),BarXOffset,(ItemNum-1)*BarYSize+BarYOffset,0);
 410   3                  //·´ÏÔ¶¥²¿ ÏîItem  Î»ÖÃ0
 411   3                  BarDisp(*(DispItem+Item),BarXOffset,Where*BarYSize+BarYOffset,1);//·´ÏÔ
 412   3              }
 413   2      #ifdef RockBack
 414   2          }
 415   1      #else
                  }else{
                      Item = ItemBack;//Restore
                  }
              #endif
 420   1      
 421   1          Bar(Item,ItemNum,MenuBarPosX,MenuBarNumPosX);                  //Î¬»¤¹ö¶¯Ìõ
 422   1          Jump2Menu(SelfMenuIndex,FlashMode_NoAction);
 423   1      
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 8   

 424   1      }
 425          //*********************************************************
 426          
 427          
 428          /*
 429          *****************************************************************************
 430          * DispIcoMenuInit - Í¼±ê²ã²Ëµ¥½çÃæ
 431          * DESCRIPTION: -
 432          * ¹²ÓÐ5¸öº¯Êý
 433           DispIcoMenuInit    DispIcoMenuUp   DispIcoMenuDown
 434           DispIcoMenuLeft    DispIcoMenuRight
 435          * @Return :
 436          *
 437          *****************************************************************************
 438          */
 439          void DispIcoMenuInit()
 440          {
 441   1      
 442   1          ItemNum = IcoMenu[language].TextNum;//¶àÉÙÊý¾ÝÏî
 443   1          DispItem = IcoMenu[language].Text;  //Êý¾Ý
 444   1      
 445   1      
 446   1          GUI_Clear();
 447   1      //-------------------
 448   1          if(Flash == FlashMode_AutoInit){//´Ó0½øÈë,³õÊ¼»¯ItemµÈÖµ
 449   2              PUSH();
 450   2              Item = 0;
 451   2              Where = 0;
 452   2          }
 453   1          GUI_DispStringAtBar(*(DispItem+Item),0,ICO_PosY+ICO_YSize,126,GUI_TA_HCENTER);//²Ëµ¥Ãû×Ö
 454   1          GUI_DrawIcon(icos[Item],ICO_PosX,ICO_PosY);             //Í¼±ê
 455   1      
 456   1          //ÏÔÊ¾°´¼ü¶ÔÓ¦µÄÎÄ×ÖÌáÊ¾,1-->"½øÈë"
 457   1          GUI_DispStringAtBar(*(Tip[language].Text+1),0,Enter_PosY,126,GUI_TA_HCENTER);
 458   1      
 459   1          Bar(Item,ItemNum,MenuBarPosX,MenuBarNumPosX);                  //Î¬»¤¹ö¶¯Ìõ
 460   1          return;
 461   1      }
 462          
 463          /*
 464          *****************************************************************************
 465          * DispIcoMenuUp - Í¼±ê²ãÏÂÈ·¶¨¼üµÄÐÐÎª
 466          * DESCRIPTION: -
 467          * ·Ö·¢´¦Àí¸÷¸öÌø×ª
 468          * µÚÒ»²ã²Ëµ¥µÄUp¼ü´¦Àí
 469          * Return :
 470          *
 471          *****************************************************************************
 472          */
 473          void DispIcoMenuUp()
 474          {
 475   1      
 476   1          switch(Item){
 477   2              case 0:{
 478   3                  GUI_Clear();
 479   3                  //¹¦ÄÜ
 480   3                  Jump2Menu(MenuFuncIndex,FlashMode_AutoInit);
 481   3                  return;
 482   3              }
 483   2              case 1:{
 484   3                  GUI_Clear();
 485   3                  //²ÎÊý
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 9   

 486   3                  Jump2Menu(MenuParaIndex,FlashMode_AutoInit);
 487   3                  return;
 488   3              }
 489   2              case 2:{
 490   3                  GUI_Clear();
 491   3                  //²âÁ¿
 492   3                  Jump2Menu(MenuMeasureIndex,FlashMode_AutoInit);
 493   3                  return;
 494   3              }
 495   2              case 3:{
 496   3                  GUI_Clear();
 497   3                  //ÓïÑÔ
 498   3                  Jump2Menu(MenuLanguageIndex,FlashMode_ManualInit);
 499   3                  //ÔÚMenuLanguage.CÖÐµÄDispMenuLanguageInitº¯ÊýÖÐÐÞ¸ÄItem Where!
 500   3                  return;
 501   3              }
 502   2              case 4:{
 503   3                  Jump2Menu(SelfMenuIndex,FlashMode_NoAction);
 504   3                  return;
 505   3              }
 506   2              case 5:{
 507   3                  Jump2Menu(SelfMenuIndex,FlashMode_NoAction);
 508   3                  return;
 509   3              }
 510   2              default:{
 511   3                  Jump2Menu(MenuTopIndex,FlashMode_NoAction);
 512   3                  return;
 513   3              }
 514   2          }
 515   1      
 516   1      }
 517          
 518          void DispIcoMenuDown()
 519          {
 520   1          POP();
 521   1      }
 522          
 523          void DispIcoMenuLeft()
 524          {
 525   1          if(Item==0){
 526   2              Item = ItemNum-1;
 527   2          }else{
 528   2              Item--;
 529   2          }
 530   1      
 531   1          GUI_DispStringAtBar(*(DispItem+Item),0,ICO_PosY+ICO_YSize,126,GUI_TA_HCENTER);//²Ëµ¥Ãû×Ö
 532   1          GUI_DrawIcon(icos[Item],ICO_PosX,ICO_PosY);             //Í¼±ê
 533   1          Bar(Item,ItemNum,MenuBarPosX,MenuBarNumPosX);                  //Î¬»¤¹ö¶¯Ìõ
 534   1          Jump2Menu(SelfMenuIndex,FlashMode_NoAction);
 535   1      }
 536          
 537          void DispIcoMenuRight()
 538          {
 539   1          if(Item==(ItemNum-1)){
 540   2              Item = 0;
 541   2          }else{
 542   2              Item++;
 543   2          }
 544   1      
 545   1          GUI_DispStringAtBar(*(DispItem+Item),0,ICO_PosY+ICO_YSize,126,GUI_TA_HCENTER);//²Ëµ¥Ãû×Ö
 546   1          GUI_DrawIcon(icos[Item],ICO_PosX,ICO_PosY);             //Í¼±ê
 547   1          Bar(Item,ItemNum,MenuBarPosX,MenuBarNumPosX);                  //Î¬»¤¹ö¶¯Ìõ
C51 COMPILER V8.16   MENUTOP                                                               12/15/2008 14:30:10 PAGE 10  

 548   1          Jump2Menu(SelfMenuIndex,FlashMode_NoAction);
 549   1      }
 550          //---------------------------------------------------------
 551          
 552          
 553          
 554          //---------------------------
 555          
 556          void DispBuildTime(void)//±àÒëÊ±¼ä
 557          {
 558   1      
 559   1          GUI_DispStringAt("Build Time:",0,0);
 560   1          GUI_DispStringAt(__DATE__,0,2);
 561   1          GUI_DispStringAt(__TIME__,0,4);
 562   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1471    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
